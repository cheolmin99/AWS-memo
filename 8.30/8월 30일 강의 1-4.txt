8월 30일
14 : 30 ~ 15 : 00
목적에 맞는 데이터베이스 선택하기
----------------------------------------------------------------------------------------------------------
강의 내용 : 
요즘 트랜드 -> 데브옵스를 요구중

기존 관계형 데이터베이스에선 효율적인 볼륨을 받아내지 못함.

마이크로서비스 아키텍처 msa가 필요함 msa는 보안, db 호환 등 고려할 사항이 많음.
완전 관리형 서비스를 사용하여 스키마 디자인, 쿼리 설계, 최적화를 신경써야함.

라이선스가 없는 오픈소스 db를 활용 하며, 신뢰성이 있는것을 이용

서비스를 분리화 하고 서비스에 맞는 db를 사용할 수 있음.
--------------------------------------------------------------------
Relational 데이터 무결성 및 트랜잭션 보장 스키마 보장
워크로드, 마이그레이션, e게 및 crm 금융 서비스

key-value 높은 처리량, 최소 지연 보장 유연성 확장
실시간 입찰, 온라인 쇼핑 장바구니, sns, 제품 카탈로그, 고객 환경 정보

document 문서의 저장 및 해당 문서ㅡ이 모든 속성에 대한 빠른 조회
컨텐츠 관리, 모바일, 개인화

in-memory 키를 기반으로 마이크로 초 이내의 응답 요구
게임유저 랭킹, 실시간 분석, 캐싱

graph 데이터 간 신속하고 간편한 관계 구축 및 탐색
사기 탐지, 소셜 네트워킹, 추천엔진

time - series 시간에 따른 데이터의 용이한 수집, 저장, 처리
IoT 앱, 이벤트 기반 추적

Ledger 앱 내 모든 데이터에 대해 완전하고 변조 불가능한 기록 관리
공급망 관리, 헬스케어, 등록 관리, 재정
--------------------------------------------------------------------
그렇게 해야하는 이유 : rds aurora와 같이 관리형 데이터베이스로 전환하면 더 나은 성능을 보여줌
결론 -> 시스템의 효율을 극대화 하기 위해서
rds = 오픈소스 (mysql, sql server, mariadb)가 호환이 잘 됨 

웹, 게임, 광고 등에서 dynamo db를 사용함 -> 스트리밍이 필요하다면 생각을 해보아야 할지도?
넷플릭스도 dynamodb를 사용

dms를 통하여 db를 옮길 수 있긴 함.
documentDB를 사용하면 데이터를 읽어오는 속도가 빠름

aws elasticache : 캐시 서비스 (게임, 광고, 금융, 의료, iot) 빠른 성능을 필요로 하는 업무에 적합하게

memory DB : 독립적 db 데이터에 대한 내구성 가용성 확보 가능 (Grab이라는 어플에서 사용 / 동남아 택시)

timestream : 시간적 제약이 있는 그래프 느낌

블럭체인 기술을 통해 데이터의 위변조를 막는것이 좋음 (금융, 제조 등.. / BMW 앱)

결론 :
1. 관계형 워크로드를 관리형 데이터베이스 서비스로 이관 (RDS)
개선점 - 민첩성, 관리 편의성, 비용 효율성

2. 캐싱 및 인-메모리 워크로드 오프로드 구현
개선점 - 확장성 및 성능

3. 비관계형 쿼리 패턴을 NoSQL로 이관
개선점 - 민첩성, 혁신, 확장성, 성능, 관리 편의성, 비용 효율성

4. 전문 데이터 세트 및 쿼리 패턴을 전문 데이터베이스 서비스로 이관
개선점 - 민첩성, 혁신, 확장성, 성능, 관리 편의성, 비용 효율성


----------------------------------------------------------------------------------------------------------
