9월 1일
16 : 40 ~ 17 : 10
- AWS에서 클라우드 기반 환경을 구축하기 위해 필요한 모든 것
----------------------------------------------------------------------------------------------------------
강의 내용 : 
CloudFront란? 콘텐츠 전송 네트워크(CDN) 서비스

낮은 대기 시간과 높은 전송 속도로 데이터, 비디오, 애플리케이션 및 API를 전 세계 고객에게 안전하게 제공함

전환 이점 - 보안
관리형 서비스이며 인프라를 DDoS 공격으로부터 보호할 수 있음

올바른 형식의 HTTP/HTTPS 트래픽만 허용 / 모든 패킷 실시간 감시

전송 중 암호화. 기본 도메인 TLS제공 추가 비용 없이 TLS 인증서를 제공
자동 redirection 가능

URL Cookie를 이용하여 승인된 사용자만 다룬로드 허용
국가별 차단 / 허용 가능

추가적인 보호가 가능해 다양한 접근제어 가능

오리진이 s3라면 아이덴티티, 컨트롤을 사용하여 액세스 허용을 설정할 수 있음
특정 헤더를 추가하여 오리진에서 걸러낼 수 있음

post 요청시 민감한 파라미터는 고객이 제공한 공개 키를 사용하여 암호화 할 수 있음

cashe 최적화
사용자 가까이에 있는 응답을 사용하여 가장 빠른 성능을 낼 수 있음
레이어 선택은 동적이며 트래픽 유형에 맞게 조정해야함

쉴드를 이용해 캐시히트를 보완할 수 있음 (캐시미스가 날 경우 확인을 계속 거치고 거침)

Global Network를 이용한 가속
안정적이고 빠른 성능을 제공하는 AGN를 기반으로 고속 전송

원본이 AWS 리전 외부에 존재하는 경우 클라우드프론트 오리진 쉴드를 활용하여 퍼플릭 인터넷 구간을 최소화

비용 구조 - 데이터 전송
약정을 통한 할인(DTO가 10TB 넘어갈 경우)

정적/동적 콘텐츠
중요한 부분은 캐시key 헤더 조작도 가능

파일명 없이 호출하거나 파일 확장자 없이 호출하는 인덱스 페이지 요청에 대한 다시쓰기 예제

funcion handler(event) {
    var request = event.request;
    var headers = request.headers;
    var host - request.headers.host.value;
    var country - 'DE'
    br newurl = `https://${host}/de/index.html`

    if (haders['cloudfront-viewer-contry']) {
        var contryCode = headers['cloudfront-viewer-contry'].value;
        if (contryCode === country) {
            var response = {
                statusCode: 302,
                statusDescription: 'Found',
                headers:
                    {"location": { "value": newurl} }
            }
            return response;
        }
    }
    return request;
}

github.com/aws-samples/amazon-cloudfront-functions  << 아마존 깃헙 프론트 예제

람다@엣지를 이용 / Cloudfront 콘솔에서 정보를 얻을 수 있음

전환 과정

준비과정 (Preparation)
- 비즈니스 도전과제 정의
- 전환범위 정의
- 상위 수준의 디자인 설계 및 작업 정의
- 소유권 정의(업무 분담)
- 작업량 예측
- 액세스 활성화
- 가시성 확보

개발 및 행동개시 (migration)
- 파이프라인 구성
- 스테이징 배포 환경 구성
- CloudFront로 전환 (충분히 테스트를 거친 뒤)
- 모니터링
- 문서화
- 기존 구성 정리

유지보수 (Ongoing Maintenance)
- 모니터링 및 개선
- CI/CD로 배포
- 구성 변경 감사
- 요금 알람 생성
- 현재 워크플로 자동화

----------------------------------------------------------------------------------------------------------
